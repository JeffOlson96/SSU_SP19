/* msr_table_39.h
 *
 * Model-specific registers selected from table 39 of 
 * Volume 4 of Intel's January 2019 Software Developers' Manual
 * (see https://software.intel.com/en-us/articles/intel-sdm).
 *
 * This file has been generated by generate-headers.py.
 * Probably best to make edits there.
 *
 * Columns are:  tag, name, address, table, scope and bitmask.
 */

#ifndef __CORE_PERF_LIMIT_REASONS
#define __CORE_PERF_LIMIT_REASONS
_MSR(MSR,CORE_PERF_LIMIT_REASONS,0x64F,39,package,MASK_RANGE_64(29,26) | MASK_RANGE_64(24,20) | MASK_RANGE_64(17,10) | MASK_RANGE_64(8,4) | MASK_RANGE_64(1, 0))
#endif  //__CORE_PERF_LIMIT_REASONS

#ifndef __PERF_GLOBAL_STATUS
#define __PERF_GLOBAL_STATUS
_MSR(IA32,PERF_GLOBAL_STATUS,0x38E,39,thread,0x0)
#endif  //__PERF_GLOBAL_STATUS

#ifndef __PERF_GLOBAL_STATUS_RESET
#define __PERF_GLOBAL_STATUS_RESET
_MSR(IA32,PERF_GLOBAL_STATUS_RESET,0x390,39,thread,0x0)
#endif  //__PERF_GLOBAL_STATUS_RESET

#ifndef __PERF_GLOBAL_STATUS_SET
#define __PERF_GLOBAL_STATUS_SET
_MSR(IA32,PERF_GLOBAL_STATUS_SET,0x391,39,thread,0x0)
#endif  //__PERF_GLOBAL_STATUS_SET

#ifndef __PERF_GLOBAL_INUSE
#define __PERF_GLOBAL_INUSE
_MSR(IA32,PERF_GLOBAL_INUSE,0x392,39,thread,0x0)
#endif  //__PERF_GLOBAL_INUSE

#ifndef __PM_ENABLE
#define __PM_ENABLE
_MSR(IA32,PM_ENABLE,0x770,39,package,0x0)
#endif  //__PM_ENABLE

#ifndef __POWER_CTL
#define __POWER_CTL
_MSR(MSR,POWER_CTL,0x1FC,39,package,0x0)
#endif  //__POWER_CTL

#ifndef __PPERF
#define __PPERF
_MSR(MSR,PPERF,0x64E,39,thread,0x0)
#endif  //__PPERF

#ifndef __RING_PERF_LIMIT_REASONS
#define __RING_PERF_LIMIT_REASONS
_MSR(MSR,RING_PERF_LIMIT_REASONS,0x6B1,39,package,0x0)
#endif  //__RING_PERF_LIMIT_REASONS

#ifndef __HWP_CAPABILITIES
#define __HWP_CAPABILITIES
_MSR(IA32,HWP_CAPABILITIES,0x771,39,thread,0x0)
#endif  //__HWP_CAPABILITIES

#ifndef __HWP_INTERRUPT
#define __HWP_INTERRUPT
_MSR(IA32,HWP_INTERRUPT,0x773,39,thread,0x0)
#endif  //__HWP_INTERRUPT

#ifndef __HWP_REQUEST
#define __HWP_REQUEST
_MSR(IA32,HWP_REQUEST,0x774,39,thread,0x0)
#endif  //__HWP_REQUEST

#ifndef __HWP_REQUEST_PKG
#define __HWP_REQUEST_PKG
_MSR(IA32,HWP_REQUEST_PKG,0x772,39,package,0x0)
#endif  //__HWP_REQUEST_PKG

#ifndef __HWP_STATUS
#define __HWP_STATUS
_MSR(IA32,HWP_STATUS,0x777,39,thread,0x0)
#endif  //__HWP_STATUS

#ifndef __CORE_HDC_RESIDENCY
#define __CORE_HDC_RESIDENCY
_MSR(MSR,CORE_HDC_RESIDENCY,0x653,39,core,0x0)
#endif  //__CORE_HDC_RESIDENCY

#ifndef __PKG_HDC_CONFIG
#define __PKG_HDC_CONFIG
_MSR(MSR,PKG_HDC_CONFIG,0x652,39,package,0x0)
#endif  //__PKG_HDC_CONFIG

#ifndef __PKG_HDC_CTL
#define __PKG_HDC_CTL
_MSR(IA32,PKG_HDC_CTL,0xDB0,39,package,0x0)
#endif  //__PKG_HDC_CTL

#ifndef __PKG_HDC_DEEP_RESIDENCY
#define __PKG_HDC_DEEP_RESIDENCY
_MSR(MSR,PKG_HDC_DEEP_RESIDENCY,0x656,39,package,0x0)
#endif  //__PKG_HDC_DEEP_RESIDENCY

#ifndef __PKG_HDC_SHALLOW_RESIDENCY
#define __PKG_HDC_SHALLOW_RESIDENCY
_MSR(MSR,PKG_HDC_SHALLOW_RESIDENCY,0x655,39,package,0x0)
#endif  //__PKG_HDC_SHALLOW_RESIDENCY

#ifndef __PLATFORM_ENERGY_COUNTER
#define __PLATFORM_ENERGY_COUNTER
_MSR(MSR,PLATFORM_ENERGY_COUNTER,0x64D,39,platform,0x0)
#endif  //__PLATFORM_ENERGY_COUNTER

#ifndef __PLATFORM_POWER_LIMIT
#define __PLATFORM_POWER_LIMIT
_MSR(MSR,PLATFORM_POWER_LIMIT,0x65C,39,platform,0x0)
#endif  //__PLATFORM_POWER_LIMIT

#ifndef __PM_CTL1
#define __PM_CTL1
_MSR(IA32,PM_CTL1,0xDB1,39,thread,0x0)
#endif  //__PM_CTL1

#ifndef __THREAD_STALL
#define __THREAD_STALL
_MSR(IA32,THREAD_STALL,0xDB2,39,thread,0x0)
#endif  //__THREAD_STALL

#ifndef __WEIGHTED_CORE_C0
#define __WEIGHTED_CORE_C0
_MSR(MSR,WEIGHTED_CORE_C0,0x658,39,package,0x0)
#endif  //__WEIGHTED_CORE_C0

